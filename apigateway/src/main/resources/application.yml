spring:
  main:
    web-application-type: reactive
  jpa:
  show-sql: true
  hibernate:
    ddl-auto: create-drop
  properties:
    hibernate:
      dialect: org.hibernate.dialect.MySQL8Dialect
  datasource:
    url: jdbc:mysql://localhost:3306/getmybook
    username: root
    password: password


  cloud:
    gateway:
      routes:
        - id: order-route
          uri: ${ORDER_ROUTE_URI:https://getmybook-7.onrender.com}
          predicates:
            - Path=/order/**
          filters:
            - AuthenticationFilter
            - AddResponseHeader=X-Powered-By, GETMYBOOK Order Service
        - id: user-route
          uri: ${USER_ROUTE_URI:https://getmybook-4.onrender.com}
          predicates:
            - Path=/auth/**
          filters:
            - AuthenticationFilter
            - AddResponseHeader=X-Powered-By, GETMYBOOK Gateway Service
        - id: book-route
          uri: ${BOOK_ROUTE_URI:https://getmybook-5.onrender.com}
          predicates:
            - Path=/book/**
          filters:
            - AuthenticationFilter
            - AddResponseHeader=X-Powered-By, GETMYBOOK Gateway Service

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
